fn main[T](x: T) T {
    for ,, {
        let x: List[int] = 0;
        let y = 1;
        (|x: string, y: int, z| stdout.writeln(x); stdout.writeln(y); stdout.writeln(z))("meow", x, y)
    };
    x
}

enum Result[T, E] {
    Ok(T),
    Err(E)
}
/* for let i = 0, i < 100, i++ {
    stdout.writeln("%d".format(i))
} */
/* <number>if 1 {
    let i = 10;
    while i < 0 {
        stdout.writeln("Hello World");
        i--
    };
    let x = 0;
    let y;
    const z = let w = 0;
    (list[{0}] + List[int]());
    File.open("file.txt", "r").read().split('\n)[0];
    ('a * -0b10.01 & 0xFF..sign) + (2 / 3)
} else {
    0
} */
0xFF00EE
// 0x$T
0xabc.def
24982
23903290.4893
0o325763427
/* /* /* */ */ */
'a 'b 'c
"meow\nmeow\\\'\\" // Expected: meow<newline>meow\'\
"doubleQuotedString on next line :
\"\"" // Expected: doubleQuotedString on next line:<newline>""
{[()]},/.
1 + 1 / 2 = 3;
i++
"operators following"
+
++
-
--
*
**
=
==
&
&&
|
||
[
]
{
}
(
)
/
,
.
;
<
>
<=
>=
>>
<<
for if while break continue fn else
my cat is furry
: